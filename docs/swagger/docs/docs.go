// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-10-26 23:14:18.142576 +0700 WIB m=+0.022199203

package docs

import (
	"bytes"
	"encoding/json"
	"os"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
		"/producer": {
		  "post": {
			"description": "",
			"summary": "PRODUCER",
			"operationId": "PRODUCER",
			"deprecated": false,
			"produces": [
			  "application/json"
			],
			"parameters": [
			  {
				"name": "Body",
				"in": "body",
				"required": true,
				"schema": {
				  "$ref": "#/definitions/PRODUCERRequest"
				}
			  },
			  {
				"name": "Content-Type",
				"in": "header",
				"required": true,
				"type": "string"
			  }
			],
			"responses": {
			  "200": {
				"description": "",
				"schema": {
				  "type": "object"
				},
				"headers": {}
			  }
			}
		  }
		},
		"/user": {
		  "post": {
			"description": "",
			"summary": "INSERT_USER",
			"operationId": "INSERT_USER",
			"deprecated": false,
			"produces": [
			  "application/json"
			],
			"consumes": [
			  "application/x-www-form-urlencoded"
			],
			"parameters": [
			  {
				"name": "name",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "email",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "password",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "date_of_birth",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "phone_number",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "current_address",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "city",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "province",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "district",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "lat",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "lng",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "job",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "image",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "Content-Type",
				"in": "header",
				"required": true,
				"type": "string"
			  }
			],
			"responses": {
			  "200": {
				"description": "",
				"schema": {
				  "type": "object"
				},
				"headers": {}
			  }
			}
		  }
		},
		"/user/4": {
		  "put": {
			"description": "",
			"summary": "UPDATE_USER",
			"operationId": "UPDATE_USER",
			"deprecated": false,
			"produces": [
			  "application/json"
			],
			"consumes": [
			  "application/x-www-form-urlencoded"
			],
			"parameters": [
			  {
				"name": "name",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "email",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "password",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "date_of_birth",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "phone_number",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "current_address",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "city",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "province",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "district",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "lat",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "lng",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "job",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "image",
				"in": "formData",
				"required": true,
				"type": "string"
			  },
			  {
				"name": "Content-Type",
				"in": "header",
				"required": true,
				"type": "string"
			  }
			],
			"responses": {
			  "200": {
				"description": "",
				"schema": {
				  "type": "object"
				},
				"headers": {}
			  }
			}
		  }
		},
		"/graphql": {
		  "post": {
			"description": "",
			"summary": "GET ALL USER GRAPHQL",
			"operationId": "GETALLUSERGRAPHQL",
			"deprecated": false,
			"produces": [
			  "application/json"
			],
			"parameters": [
			  {
				"name": "Body",
				"in": "body",
				"required": true,
				"schema": {
				  "$ref": "#/definitions/GETALLUSERGRAPHQLRequest"
				}
			  },
			  {
				"name": "Content-Type",
				"in": "header",
				"required": true,
				"type": "string"
			  }
			],
			"responses": {
			  "200": {
				"description": "",
				"schema": {
				  "type": "object"
				},
				"headers": {}
			  }
			}
		  }
		}
	  },
	  "definitions": {
		"PRODUCERRequest": {
		  "title": "PRODUCERRequest",
		  "example": {
			"target": "order",
			"data": {
			  "name": "sofyan",
			  "order_code": "123456"
			}
		  },
		  "type": "object",
		  "properties": {
			"target": {
			  "type": "string"
			},
			"data": {
			  "type": "object"
			}
		  },
		  "required": [
			"target",
			"data"
		  ]
		},
		"GETALLUSERGRAPHQLRequest": {
		  "title": "GETALLUSERGRAPHQLRequest",
		  "example": {
			"query": "query {\n  Users(limit:10, page:0){\n      page\n    results {\n      id\n      name\n      city\n    }\n  }\n}"
		  },
		  "type": "object",
		  "properties": {
			"query": {
			  "type": "string"
			}
		  },
		  "required": [
			"query"
		  ]
		},
		"GETUSERBYIDGRAPHQLRequest": {
		  "title": "GETUSERBYIDGRAPHQLRequest",
		  "example": {
			"query": "query {\n  User(id:1){\n     id\n     name\n     city\n  }\n}"
		  },
		  "type": "object",
		  "properties": {
			"query": {
			  "type": "string"
			}
		  },
		  "required": [
			"query"
		  ]
		}
	  }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "PRETEST-0.4",
	Host:        os.Getenv("SWAGGER_SERVER_ADDRESS"),
	BasePath:    "/v1/",
	Schemes:     []string{},
	Title:       "GGWP API",
	Description: "GGWP API INTERFACE SCRACTH",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
